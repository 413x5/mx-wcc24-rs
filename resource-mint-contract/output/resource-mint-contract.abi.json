{
    "buildInfo": {
        "rustc": {
            "version": "1.85.0-nightly",
            "commitHash": "5f23ef7d3f7a8c3e0ca5c4e1978829c0448a3686",
            "commitDate": "2024-12-20",
            "channel": "Nightly",
            "short": "rustc 1.85.0-nightly (5f23ef7d3 2024-12-20)"
        },
        "contractCrate": {
            "name": "resource-mint-contract",
            "version": "0.0.0"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.54.6"
        }
    },
    "name": "ResourceMintContract",
    "constructor": {
        "docs": [
            "Set up initial contract state",
            "",
            "# Arguments",
            "* `stake_token_ticker` - Stake token ticker",
            "* `mint_stake_threshold` - Stake amount required to mint one resource",
            "* `mint_rounds_interval` - Number of rounds between resource mints"
        ],
        "inputs": [
            {
                "name": "stake_token_ticker",
                "type": "bytes"
            },
            {
                "name": "mint_stake_threshold",
                "type": "BigUint"
            },
            {
                "name": "mint_rounds_interval",
                "type": "u64"
            }
        ],
        "outputs": []
    },
    "upgradeConstructor": {
        "docs": [
            "Contract upgrade logic if necessary"
        ],
        "inputs": [],
        "outputs": []
    },
    "endpoints": [
        {
            "docs": [
                "Endpoint for staking tokens"
            ],
            "name": "stakeTokens",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": []
        },
        {
            "docs": [
                "Endpoint for minting resources"
            ],
            "name": "mintResources",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "docs": [
                "Endpoint for claiming resources"
            ],
            "name": "claimResources",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "docs": [
                "Token ticker for stake tokens. E.g. WINTER"
            ],
            "name": "getStakeTokenTicker",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "docs": [
                "Stake threshold for minting resources   "
            ],
            "name": "getMintStakeThreshold",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "docs": [
                "Interval between mint rounds in number of rounds    "
            ],
            "name": "getMintRoundsInterval",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "docs": [
                "Option to mint if user has claimed all previously minted resources"
            ],
            "name": "getOptionMintIfClaimed",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "docs": [
                "User stake info"
            ],
            "name": "getStakeInfo",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<multi<Address,List<StakeInfo>>>",
                    "multi_result": true
                }
            ]
        },
        {
            "docs": [
                "User minted resources"
            ],
            "name": "getUserMintedResources",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<multi<Address,BigUint>>",
                    "multi_result": true
                }
            ]
        },
        {
            "docs": [
                "User claimed resources"
            ],
            "name": "getUserClaimedResources",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<multi<Address,BigUint>>",
                    "multi_result": true
                }
            ]
        },
        {
            "docs": [
                "User has unclaimed resources"
            ],
            "name": "getUserHasUnclaimedResources",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "docs": [
                "Resource token ID"
            ],
            "name": "getResourceTokenId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "docs": [
                "Resource token has local mint role"
            ],
            "name": "getResourceTokenHasLocalMintRole",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "docs": [
                "Last resource mint round"
            ],
            "name": "getLastResourceMintRound",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "docs": [
                "Set mint rounds interval"
            ],
            "name": "setMintRoundsInterval",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "mint_rounds",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "docs": [
                "Set stake threshold for minting one resource token"
            ],
            "name": "setStakeThreshold",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "stake_amount",
                    "type": "BigUint"
                }
            ],
            "outputs": []
        },
        {
            "docs": [
                "Set option to mint resource tokens if user has claimed all previously minted resources"
            ],
            "name": "setOptionMintIfClaimed",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "mint_if_claimed",
                    "type": "bool"
                }
            ],
            "outputs": []
        },
        {
            "docs": [
                "Issue token to be used for minting resources"
            ],
            "name": "issueResourceToken",
            "onlyOwner": true,
            "mutability": "mutable",
            "payableInTokens": [
                "EGLD"
            ],
            "inputs": [
                {
                    "name": "token_name",
                    "type": "bytes"
                },
                {
                    "name": "token_ticker",
                    "type": "bytes"
                },
                {
                    "name": "initial_supply",
                    "type": "optional<BigUint>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "docs": [
                "Sets the local mint role for the resource token"
            ],
            "name": "setResourceTokenLocalMintRole",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "docs": [
                "Returns number of user unclaimed resources"
            ],
            "name": "getUserUnclaimedResources",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        }
    ],
    "esdtAttributes": [],
    "hasCallback": true,
    "types": {
        "StakeInfo": {
            "type": "struct",
            "docs": [
                "Stake info structure for each stake"
            ],
            "fields": [
                {
                    "name": "token",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "amount",
                    "type": "BigUint"
                },
                {
                    "name": "round",
                    "type": "u64"
                }
            ]
        }
    }
}
